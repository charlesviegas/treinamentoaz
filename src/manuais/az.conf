upstream socket_app{
    server 127.0.0.1:8080;
}

server {
	
	
	listen 80;
	
	server_name $server_host;
	
	auth_request /auth/usuario;
	
	include local.conf;
	
	location / {
		
		auth_request off;
		
		root $auto_cadastro_path;
		index  index.html index.htm;
	}
	
	location /treina {
		
		rewrite ^/treina(.*)$ $1 break;
		root $app_path;
		index /treina/index.html;
	}
	
	location /hal {
			
		# Inclui no cabeçalho os parâmetros oriundos da autenticação.
		auth_request_set $auth_az_user $upstream_http_az_user;
		auth_request_set $auth_az_roles $upstream_http_az_roles;
			
		proxy_set_header Az-user $auth_az_user;
		proxy_set_header Az-roles $auth_az_roles;

		# Retira o /hal da requisição deixando-a como se fosse para o raiz.
		rewrite ^/hal(.*)$ $1 break;
					
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
			
		proxy_pass http://socket_app;			
	}
	
	location /hal/public {
	
		auth_request off;
			
		# Retira o /hal da requisição deixando-a como se fosse para o raiz.
		rewrite ^/hal(.*)$ $1 break;
					
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
			
		proxy_pass http://socket_app;			
	}
	
	location /treina-api {
			
		# Inclui no cabeçalho os parâmetros oriundos da autenticação.
		auth_request_set $auth_az_user $upstream_http_az_user;
		auth_request_set $auth_az_roles $upstream_http_az_roles;
			
		proxy_set_header Az-user $auth_az_user;
		proxy_set_header Az-roles $auth_az_roles;
					
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
			
		proxy_pass http://socket_app;			
	}
	
	location /auth/usuario {
		internal;
			
		proxy_pass_request_body     off;
		proxy_set_header Content-Length "";
		proxy_set_header X-Original-URI $request_uri;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_pass http://socket_app;
	}
	
	location /auth/j_spring_security_check {
		auth_request off;
			
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;

		proxy_pass http://socket_app;
	}

	location /logout {
        	auth_request off;

        	proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection "upgrade";
        	proxy_http_version 1.1;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header Host $host;

        	proxy_pass http://socket_app;
    	}
	
	error_page 404 /404.html;
		location = $40x_path {
	}

	error_page 500 502 503 504 /50x.html;
		location = $50x_path {
	}
	
	error_page 401 = @error401;
		location @error401 {
	
		if ($http_x_requested_with != "XMLHttpRequest") {
			rewrite ^ http://$server_host/#/login?uri=$request_uri redirect;
		}
	}
}